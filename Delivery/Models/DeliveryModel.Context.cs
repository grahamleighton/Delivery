//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Delivery.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WarehouseEntities : DbContext
    {
        public WarehouseEntities()
            : base("name=WarehouseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<mvc_DeliveryStatusSummary_Result> mvc_DeliveryStatusSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mvc_DeliveryStatusSummary_Result>("mvc_DeliveryStatusSummary");
        }
    
        public virtual ObjectResult<mvc_ExamineDelivery_Result> mvc_ExamineDelivery(string delivery, ObjectParameter deliveryFound)
        {
            var deliveryParameter = delivery != null ?
                new ObjectParameter("Delivery", delivery) :
                new ObjectParameter("Delivery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mvc_ExamineDelivery_Result>("mvc_ExamineDelivery", deliveryParameter, deliveryFound);
        }
    
        public virtual ObjectResult<mvc_showWipForItem_Result> mvc_showWipForItem(string delivery, string catNo, string optNo, string supplier)
        {
            var deliveryParameter = delivery != null ?
                new ObjectParameter("Delivery", delivery) :
                new ObjectParameter("Delivery", typeof(string));
    
            var catNoParameter = catNo != null ?
                new ObjectParameter("CatNo", catNo) :
                new ObjectParameter("CatNo", typeof(string));
    
            var optNoParameter = optNo != null ?
                new ObjectParameter("OptNo", optNo) :
                new ObjectParameter("OptNo", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mvc_showWipForItem_Result>("mvc_showWipForItem", deliveryParameter, catNoParameter, optNoParameter, supplierParameter);
        }
    
        public virtual ObjectResult<mvc_getDeliverySummary_Result> mvc_getDeliverySummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mvc_getDeliverySummary_Result>("mvc_getDeliverySummary");
        }
    }
}
